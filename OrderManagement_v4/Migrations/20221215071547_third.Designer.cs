// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderManagement_v4.Models;

namespace OrderManagement_v4.Migrations
{
    [DbContext(typeof(OrderContext))]
    [Migration("20221215071547_third")]
    partial class third
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OrderManagement_v4.Models.Cart", b =>
                {
                    b.Property<int>("cart_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ProductName")
                        .HasColumnType("varchar(30)");

                    b.Property<int>("ProductPrice");

                    b.Property<string>("Product_details")
                        .HasColumnType("varchar(70)");

                    b.Property<int>("Product_id");

                    b.Property<int>("Quantity");

                    b.Property<string>("Size")
                        .HasColumnType("varchar(10)");

                    b.HasKey("cart_id");

                    b.ToTable("cart");
                });

            modelBuilder.Entity("OrderManagement_v4.Models.Customer", b =>
                {
                    b.Property<int>("Cust_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("varchar(70)");

                    b.Property<string>("City")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Gender")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(30)");

                    b.Property<long>("Mobileno");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Pincode");

                    b.Property<string>("State")
                        .HasColumnType("varchar(30)");

                    b.HasKey("Cust_id");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("OrderManagement_v4.Models.Order", b =>
                {
                    b.Property<int>("Order_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cust_id");

                    b.Property<string>("Delivery_Address")
                        .HasColumnType("varchar(70)");

                    b.Property<DateTime>("Order_date");

                    b.Property<string>("Order_details")
                        .HasColumnType("varchar(70)");

                    b.Property<string>("Payment_method")
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("Shipment_date");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Total_Price");

                    b.HasKey("Order_id");

                    b.HasIndex("Cust_id");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("OrderManagement_v4.Models.OrderItems", b =>
                {
                    b.Property<int>("ReferenceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OrderStatus")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Order_id");

                    b.Property<int>("Price");

                    b.Property<int>("Product_id");

                    b.Property<int>("quantity");

                    b.HasKey("ReferenceId");

                    b.HasIndex("Order_id");

                    b.HasIndex("Product_id");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("OrderManagement_v4.Models.Product", b =>
                {
                    b.Property<int>("Product_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ProductName")
                        .HasColumnType("varchar(30)");

                    b.Property<int>("ProductPrice");

                    b.Property<string>("Product_details")
                        .HasColumnType("varchar(70)");

                    b.Property<int>("Quantity");

                    b.Property<string>("Size")
                        .HasColumnType("varchar(10)");

                    b.HasKey("Product_id");

                    b.ToTable("products");
                });

            modelBuilder.Entity("OrderManagement_v4.Models.Order", b =>
                {
                    b.HasOne("OrderManagement_v4.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("Cust_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OrderManagement_v4.Models.OrderItems", b =>
                {
                    b.HasOne("OrderManagement_v4.Models.Order", "order")
                        .WithMany()
                        .HasForeignKey("Order_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OrderManagement_v4.Models.Product", "product")
                        .WithMany()
                        .HasForeignKey("Product_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
